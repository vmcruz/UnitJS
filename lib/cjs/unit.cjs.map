{"version":3,"sources":["../../src/unit.ts","../../src/methods/public/index.ts","../../src/utils/RequiredType.error.ts","../../src/utils/fns.ts","../../src/methods/public/addClass.ts","../../src/methods/public/append.ts","../../src/methods/public/attr.ts","../../src/constants/index.ts","../../src/methods/public/css.ts","../../src/methods/public/data.ts","../../src/methods/public/each.ts","../../src/methods/public/first.ts","../../src/methods/public/firstChild.ts","../../src/methods/public/hasClass.ts","../../src/methods/public/html.ts","../../src/methods/public/on.ts","../../src/methods/public/parent.ts","../../src/methods/public/prepend.ts","../../src/methods/public/ready.ts","../../src/methods/public/remove.ts","../../src/methods/public/removeClass.ts","../../src/methods/public/text.ts","../../src/methods/public/toggleClass.ts","../../src/methods/public/value.ts","../../src/methods/static/index.ts","../../src/methods/static/create.ts","../../src/unit.class.ts","../../src/methods/static/date.ts","../../src/methods/static/navigate.ts","../../src/methods/static/i18n/days.ts","../../src/methods/static/i18n/months.ts","../../src/methods/static/i18n/get.ts","../../src/methods/static/i18n/index.ts"],"sourcesContent":["import { staticMethods } from './methods';\nimport { UnitJSClass } from './unit.class';\n\nconst UnitJS = (...selectors: any[]) => new UnitJSClass(...selectors);\n\nUnitJS.create = staticMethods.create;\nUnitJS.date = staticMethods.date;\nUnitJS.navigate = staticMethods.navigate;\nUnitJS.i18n = staticMethods.i18n;\n\nexport { UnitJS };\n","import addClass from './addClass';\nimport append from './append';\nimport attr from './attr';\nimport css from './css';\nimport data from './data';\nimport each from './each';\nimport first from './first';\nimport firstChild from './firstChild';\nimport hasClass from './hasClass';\nimport html from './html';\nimport on from './on';\nimport parent from './parent';\nimport prepend from './prepend';\nimport ready from './ready';\nimport remove from './remove';\nimport removeClass from './removeClass';\nimport text from './text';\nimport toggleClass from './toggleClass';\nimport value from './value';\n\nexport {\n  addClass,\n  append,\n  attr,\n  css,\n  data,\n  each,\n  first,\n  firstChild,\n  hasClass,\n  html,\n  on,\n  parent,\n  prepend,\n  ready,\n  remove,\n  removeClass,\n  text,\n  toggleClass,\n  value,\n};\n","class RequiredType extends Error {\n  constructor(message: string, ...params: any[]) {\n    super(...params);\n\n    this.name = 'RequiredType';\n    this.message = message;\n  }\n}\n\nexport default RequiredType;\n","import { type PrimitiveType } from '../types';\nimport RequiredType from './RequiredType.error';\n\n/**\n * Validates whether the value is null or undefined\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\ntype AllOfArguments = {\n  values: any[];\n  typeOf?: PrimitiveType[];\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  instanceOf?: Function[];\n  allowEmptyString?: boolean;\n};\n\n/**\n * Validates that all values in the array conform to at least one of the specified primitive types\n * or are instances of one of the specified constructor functions.\n */\nexport function allOf({\n  values,\n  typeOf = [],\n  instanceOf = [],\n  allowEmptyString = false,\n}: AllOfArguments) {\n  const instancesNames = instanceOf.map((instance) => instance.name);\n  const expectedData = [...typeOf, ...instancesNames];\n\n  if (isNullOrUndefined(values) || !Array.isArray(values)) {\n    throw new RequiredType(\n      `Expected all values to be [ ${expectedData.join(', ')} ] type, but got [ ${typeof values} ]`\n    );\n  }\n\n  let currentType: PrimitiveType = 'undefined';\n\n  const notConforms = values.some((value) => {\n    if (\n      typeof value === 'string' &&\n      value === '' &&\n      allowEmptyString === false\n    ) {\n      return true;\n    }\n\n    currentType = typeof value;\n\n    const isSupportedType = typeOf.includes(currentType);\n    const isSupportedInstance = instanceOf.some(\n      (instance) => value instanceof instance\n    );\n\n    return !isSupportedType && !isSupportedInstance;\n  });\n\n  if (notConforms) {\n    throw new RequiredType(\n      `Expected all values to be [ ${expectedData.join(', ')} ] type, but got [ ${currentType} ]`\n    );\n  }\n\n  return true;\n}\n\n/**\n * Returns the camel case representation of a kebab cased string\n */\nexport function camelFromKebab(kebab: string) {\n  const [lower, ...rest] = kebab.split('-');\n  const pascalRest = rest.map(\n    (word) => `${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`\n  );\n\n  return `${lower.toLowerCase()}${pascalRest.join('')}`;\n}\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Adds one or more CSS classes to each node.\n *\n * @this {UnitJSClass}\n * @param {...string} classNames - One or more class names to add.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any className is not a string.\n */\nfunction addClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    node.classList.add(...classNames);\n  });\n\n  return this;\n}\n\nexport default addClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Appends a DOM element or a text node (from string) to each node.\n *\n * @param {string | Element} element - A string to create a text node, or a DOM node to append.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If the input is neither a string nor a Node.\n */\nfunction append(this: UnitJSClass, element: string | Element) {\n  allOf({\n    values: [element],\n    typeOf: ['string'],\n    instanceOf: [Element],\n    allowEmptyString: true,\n  });\n\n  const htmlElement =\n    typeof element === 'string' ? document.createTextNode(element) : element;\n\n  this.__nodes__.forEach((node) => {\n    node.appendChild(htmlElement);\n  });\n\n  return this;\n}\n\nexport default append;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the value of a specified attribute on DOM nodes in the current context.\n *\n * @param {string} attribute - The name of the attribute to get or set.\n * @param {string} [value] - The value to assign. If omitted, the current value is returned.\n * @returns {string|this} Returns the attribute value, or the current instance for chaining.\n * @throws {RequiredType} If `attribute` is not a string or `value` (when provided) is not a string.\n */\nfunction attr(this: UnitJSClass, attribute: string, value?: string) {\n  allOf({ values: [attribute], typeOf: ['string'] });\n\n  if (isNullOrUndefined(value)) {\n    if (this.__nodes__[0].hasAttribute(attribute)) {\n      return this.__nodes__[0].getAttribute(attribute);\n    }\n\n    return null;\n  }\n\n  this.__nodes__.forEach((node) => {\n    node.setAttribute(attribute, value);\n  });\n\n  return this;\n}\n\nexport default attr;\n","export const CSS_VALUE_REGEX =\n  /(?<value>.+?)(?:\\s+!(?<important>important))?\\s*$/i;\n\nexport const MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const DAYS = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n\nexport const SHORTCUT_EVENTS = [\n  // Mouse\n  'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'mouseover',\n  'mouseout',\n  'auxclick',\n  'contextmenu',\n  'wheel',\n\n  // Pointer (covers mouse, touch, pen)\n  'pointerdown',\n  'pointerup',\n  'pointermove',\n  'pointerenter',\n  'pointerleave',\n  'pointercancel',\n\n  // Keyboard\n  'keydown',\n  'keyup',\n  'keypress',\n\n  // Touch\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n\n  // Drag & Drop\n  'drag',\n  'dragstart',\n  'dragend',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'drop',\n\n  // Scroll & focus\n  'scroll',\n  'focus',\n  'blur',\n\n  // Form\n  'input',\n  'change',\n  'submit',\n];\n","import { CSS_VALUE_REGEX } from '../../constants';\nimport { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets a CSS property on all nodes in the current context.\n *\n * @param {string} property - The CSS property name (in camelCase or kebab-case).\n * @param {string} [value] - The value to set for the CSS property. If omitted, acts as a getter.\n * @returns {string|this} The computed style value, or the current instance for chaining.\n * @throws {RequiredType} If `property` is not a string or `value` (when provided) is not a string.\n */\nfunction css(this: UnitJSClass, property: string, value?: string) {\n  allOf({ values: [property], typeOf: ['string'] });\n\n  if (isNullOrUndefined(value)) {\n    const computedStyles = window.getComputedStyle(this.__nodes__[0]);\n\n    return computedStyles.getPropertyValue(property);\n  }\n\n  allOf({ values: [value], typeOf: ['string'] });\n\n  const matches = value?.match(CSS_VALUE_REGEX);\n\n  if (matches) {\n    this.__nodes__.forEach((node) => {\n      node.style.setProperty(\n        property,\n        matches.groups?.value,\n        matches.groups?.important\n      );\n    });\n\n    return this;\n  }\n\n  throw new TypeError('Unkown CSSStyleValue');\n}\n\nexport default css;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, camelFromKebab, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets a data attribute (from `dataset`) on all nodes in the current context.\n *\n * @param {string} property - The camelCase name of the data attribute (without 'data-' prefix).\n * @param {string} [value] - The value to set for the data attribute. If omitted, acts as a getter.\n * @returns {string|this} The data attribute value, or the current instance for chaining.\n * @throws {RequiredType} If `property` is not a string or `value` (when provided) is not a string.\n */\nfunction data(this: UnitJSClass, property: string, value?: string) {\n  allOf({ values: [property], typeOf: ['string'] });\n\n  if (isNullOrUndefined(value)) {\n    return this.__nodes__[0].dataset[property];\n  }\n\n  allOf({ values: [value], typeOf: ['string'], allowEmptyString: true });\n\n  const propertyCamel = camelFromKebab(property);\n\n  this.__nodes__.forEach((node) => {\n    node.dataset[propertyCamel] = value;\n  });\n\n  return this;\n}\n\nexport default data;\n","import { FunctionSignature } from '../../types';\nimport { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Executes one or more callback functions on each node.\n *\n * @param {...Function} fns - One or more functions to execute on each node. Each function\n *   should accept `(node, index, nodesArray)` as arguments.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any argument is not a function.\n */\nfunction each(this: UnitJSClass, ...fns: FunctionSignature[]) {\n  allOf({ values: fns, typeOf: ['function'] });\n\n  this.__nodes__.forEach((node, index, nodeArray) => {\n    fns.forEach((fn) => fn(node, index, nodeArray));\n  });\n\n  return this;\n}\n\nexport default each;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the first node in the collection.\n *\n * @returns {any|null} The first node, or `null` if empty.\n */\nfunction first(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0];\n}\n\nexport default first;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the first child node of the first element.\n *\n * @returns {Node|null} The first child node, or `null` if none.\n */\nfunction firstChild(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0].firstChild;\n}\n\nexport default firstChild;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Checks if nodes have the specified class.\n *\n * @param {string} className - The class name to check.\n * @param {boolean} [strict=true] - If `true`, all nodes must have the class; otherwise, some.\n * @returns {boolean} Whether the nodes meet the class condition.\n * @throws {RequiredType} If `className` is not a string.\n */\nfunction hasClass(this: UnitJSClass, className: string, strict = true) {\n  allOf({ values: [className], typeOf: ['string'] });\n\n  const method = strict ? 'every' : 'some';\n\n  return this.__nodes__[method]((node) => node.classList.contains(className));\n}\n\nexport default hasClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the HTML content of nodes.\n *\n * @param {string|HTMLElement} [html] - HTML string or element to set or append.\n * @param {boolean} [append=false] - If `true`, appends instead of replacing.\n * @returns {string|this} HTML string if getting, or the current instance for chaining if setting.\n * @throws {RequiredType} If `html` is provided and is not a string or HTMLElement.\n */\nfunction html(this: UnitJSClass, html?: string | HTMLElement, append = false) {\n  if (isNullOrUndefined(html)) {\n    return this.__nodes__[0].innerHTML;\n  }\n\n  const strHtml = html instanceof HTMLElement ? html.innerHTML : html;\n\n  allOf({\n    values: [strHtml],\n    typeOf: ['string'],\n    instanceOf: [HTMLElement],\n    allowEmptyString: true,\n  });\n\n  this.__nodes__.forEach((node) => {\n    if (append) {\n      node.innerHTML += strHtml;\n    } else {\n      node.innerHTML = strHtml;\n    }\n  });\n\n  return this;\n}\n\nexport default html;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Attaches one or more event listeners to all nodes.\n *\n * @param {string} event - The event type to listen for.\n * @param {...Function} fns - One or more handler functions.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `event` is not a string or any handler is not a function.\n */\nfunction on(\n  this: UnitJSClass,\n  event: keyof HTMLElementEventMap,\n  ...fns: ((ev: Event) => void)[]\n) {\n  allOf({ values: [event], typeOf: ['string'] });\n  allOf({ values: fns, typeOf: ['function'] });\n\n  this.__nodes__.forEach((node) => {\n    fns.forEach((fn) => node.addEventListener(event, fn, false));\n  });\n\n  return this;\n}\n\nexport default on;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the parent node of the first element.\n *\n * @returns {HTMLElement|null} The parent node, or `null` if empty.\n */\nfunction parent(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0].parentNode;\n}\n\nexport default parent;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Prepends a DOM element or a text node (from string) to each node.\n *\n * @param {string | HTMLElement} element - A string to create a text node, or a DOM node to prepend.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If the input is neither a string nor a Node.\n */\nfunction prepend(this: UnitJSClass, element: string | HTMLElement) {\n  allOf({\n    values: [element],\n    typeOf: ['string'],\n    instanceOf: [HTMLElement],\n    allowEmptyString: true,\n  });\n\n  const htmlElement =\n    typeof element === 'string' ? document.createTextNode(element) : element;\n\n  this.__nodes__.forEach((node) => {\n    node.insertBefore(htmlElement, node.firstChild);\n  });\n\n  return this;\n}\n\nexport default prepend;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Adds a 'load' event listener to each node.\n * Useful for elements like images, iframes, and window.\n *\n * @param {Function} fn - The handler for the 'load' event.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `fn` is not a function.\n */\nfunction ready(this: UnitJSClass, fn: (ev: Event) => void) {\n  allOf({ values: [fn], typeOf: ['function'] });\n\n  this.__nodes__.forEach((node) => {\n    if (node instanceof Window || node.nodeType === 1) {\n      node.addEventListener('load', fn, false);\n    } else {\n      node.addEventListener('DOMContentLoaded', fn, false);\n    }\n  });\n  return this;\n}\n\nexport default ready;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Removes a specified child element from each node.\n *\n * @param {Element} element - The child element to remove.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `element` is not an Element.\n */\nfunction remove(this: UnitJSClass, element: Element) {\n  allOf({ values: [element], instanceOf: [Element] });\n\n  this.__nodes__.forEach((node) => {\n    try {\n      node.removeChild(element);\n    } catch {\n      throw new SyntaxError(`${element} is not a child of this node`);\n    }\n  });\n\n  return this;\n}\n\nexport default remove;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Removes one or more classes from all nodes.\n *\n * @param {...string} classNames - One or more class names to remove.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any class name is not a string.\n */\nfunction removeClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    node.classList.remove(...classNames);\n  });\n\n  return this;\n}\n\nexport default removeClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the text content of nodes.\n *\n * @param {string} [text] - The text to set.\n * @returns {string|this} The text content, or the current instance for chaining if setting.\n * @throws {RequiredType} If `text` is provided and is not a string.\n */\nfunction text(this: UnitJSClass, text?: string) {\n  if (isNullOrUndefined(text)) {\n    return this.__nodes__[0].textContent;\n  }\n\n  allOf({ values: [text], typeOf: ['string'], allowEmptyString: true });\n\n  this.__nodes__.forEach((node) => {\n    node.textContent = text;\n  });\n\n  return this;\n}\n\nexport default text;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Toggles one or more classes on all nodes.\n *\n * @param {...string} classNames - Classes to toggle.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any class name is not a string.\n */\nfunction toggleClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    classNames.forEach((className) => node.classList.toggle(className));\n  });\n\n  return this;\n}\n\nexport default toggleClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the `value` property of nodes.\n *\n * @param {any} [value] - The value to set.\n * @returns {string|this} The value if getting, or the current instance for chaining if setting.\n */\nfunction value(this: UnitJSClass, value?: any) {\n  if (isNullOrUndefined(value)) {\n    return (this.__nodes__[0] as HTMLInputElement).value;\n  }\n\n  this.__nodes__.forEach((node) => {\n    (node as HTMLInputElement).value = value;\n  });\n\n  return this;\n}\n\nexport default value;\n","import create from './create';\nimport date from './date';\nimport navigate from './navigate';\nimport i18n from './i18n';\n\nexport { create, date, navigate, i18n };\n","import { allOf } from '../../utils/fns';\n\n/**\n * Creates a new DOM element by tag name.\n *\n * @param {string} element - The tag name of the element to create.\n * @returns {HTMLElement} The created element.\n * @throws {RequiredType} If `element` is not a string.\n */\nfunction create(element: string) {\n  allOf({ values: [element], typeOf: ['string'] });\n\n  return document.createElement(element);\n}\n\nexport default create;\n","import { DAYS, MONTHS, SHORTCUT_EVENTS } from './constants';\nimport { publicMethods } from './methods';\n\nexport class UnitJSClass {\n  __nodes__: any[] = [];\n  [k: string]: any;\n\n  static __i18n__ = {\n    months: MONTHS,\n    days: DAYS,\n  };\n\n  constructor(...selectors: any[]) {\n    selectors.forEach((selector) => {\n      if (typeof selector === 'string') {\n        try {\n          const selectedNodes = Array.from(document.querySelectorAll(selector));\n          this.__nodes__.push(...selectedNodes);\n        } catch {\n          throw new SyntaxError(`${selector} is not a valid DOM selector`);\n        }\n      } else {\n        this.__nodes__.push(selector);\n      }\n    });\n\n    // Inject dom events\n    SHORTCUT_EVENTS.forEach((e) => {\n      UnitJSClass.prototype[e] = function (fn?: (ev: Event) => void) {\n        if (fn && typeof fn === 'function') {\n          this.on(e as keyof ElementEventMap, fn);\n        } else {\n          this.each((node) => {\n            const method = node[e as keyof HTMLElement];\n\n            if (typeof method === 'function') {\n              (method as () => void).call(node);\n            }\n          });\n        }\n        return this;\n      };\n    });\n  }\n\n  get length() {\n    return this.__nodes__.length;\n  }\n\n  get nodes() {\n    return this.__nodes__;\n  }\n\n  addClass = publicMethods.addClass;\n  append = publicMethods.append;\n  attr = publicMethods.attr;\n  css = publicMethods.css;\n  data = publicMethods.data;\n  each = publicMethods.each;\n  first = publicMethods.first;\n  firstChild = publicMethods.firstChild;\n  hasClass = publicMethods.hasClass;\n  html = publicMethods.html;\n  on = publicMethods.on;\n  parent = publicMethods.parent;\n  prepend = publicMethods.prepend;\n  ready = publicMethods.ready;\n  remove = publicMethods.remove;\n  removeClass = publicMethods.removeClass;\n  text = publicMethods.text;\n  toggleClass = publicMethods.toggleClass;\n  value = publicMethods.value;\n}\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Formats a UTC timestamp into a custom string using PHP-style date format symbols.\n *\n * Inspired by PHP's `date()` function, this method formats a date based on a given format string,\n * a UNIX timestamp (in milliseconds), and an optional UTC offset (in hours). It supports\n * localization via `this.days` and `this.months` static methods.\n *\n * Supported format characters:\n * - `d` – Day of the month, 2 digits (e.g. \"01\" to \"31\")\n * - `j` – Day of the month without leading zeros (1 to 31)\n * - `w` – Day of the week (0 = Sunday to 6 = Saturday)\n * - `N` – ISO-8601 weekday number (1 = Monday to 7 = Sunday)\n * - `l` – Full name of the day (from `this.__i18n__.days`)\n * - `D` – Short name of the day (first 3 letters of `l`)\n * - `m` – Month number with leading zeros (01 to 12)\n * - `n` – Month number without leading zeros (1 to 12)\n * - `F` – Full month name (from `this.__i18n__.months`)\n * - `M` – Short month name (first 3 letters of `F`)\n * - `Y` – Full 4-digit year (e.g. \"2025\")\n * - `y` – Last two digits of the year (e.g. \"25\")\n * - `G` – 24-hour format without leading zeros (0 to 23)\n * - `H` – 24-hour format with leading zeros (00 to 23)\n * - `g` – 12-hour format without leading zeros (1 to 12)\n * - `h` – 12-hour format with leading zeros (01 to 12)\n * - `a` – Lowercase am/pm\n * - `A` – Uppercase AM/PM\n * - `i` – Minutes with leading zeros (00 to 59)\n * - `s` – Seconds with leading zeros (00 to 59)\n * - `v` – Milliseconds with leading zeros (000 to 999)\n *\n * Any character not recognized as a formatting symbol will be passed through literally.\n *\n * @param {string} format - The PHP-style format string to use.\n * @param {number} [timestamp=Date.now()] - The timestamp to format (in milliseconds).\n * @param {number} [offset=0] - UTC offset in hours (e.g. `-5` for GMT-5).\n * @throws {TypeError} If `this.__i18n__.months` is not a valid array of 12 items\n * or `this.__i18n__.days` of 7.\n * @throws {RequiredType} If invalid argument types are passed to the function.\n * @returns {string} The formatted date string.\n */\nfunction date(format: string, timestamp = Date.now(), offset = 0) {\n  allOf({ values: [format], typeOf: ['string'] });\n  allOf({ values: [offset, timestamp], typeOf: ['number'] });\n\n  if (!format) {\n    throw new TypeError('Empty string is not a valid string format');\n  }\n\n  const validFormat: { [key: string]: string | number } = {};\n  const timestampOffsetMs = offset * 60 * 60 * 1000;\n  const dateObject = new Date(timestamp + timestampOffsetMs);\n\n  validFormat.d = dateObject.getUTCDate().toString().padStart(2, '0');\n  validFormat.j = dateObject.getUTCDate();\n  validFormat.w = dateObject.getUTCDay();\n  validFormat.N = validFormat.w === 0 ? 7 : validFormat.w;\n  validFormat.m = (dateObject.getUTCMonth() + 1).toString().padStart(2, '0');\n  validFormat.n = dateObject.getUTCMonth() + 1;\n  validFormat.Y = dateObject.getUTCFullYear();\n  validFormat.y = validFormat.Y.toString().slice(-2);\n\n  validFormat.a = 'am';\n  validFormat.A = 'AM';\n  validFormat.G = dateObject.getUTCHours();\n  validFormat.H = validFormat.G.toString().padStart(2, '0');\n  validFormat.g = validFormat.G === 0 ? 12 : validFormat.G;\n\n  if (validFormat.G > 12) {\n    validFormat.a = 'pm';\n    validFormat.A = 'PM';\n    validFormat.g = validFormat.G - 12;\n  }\n\n  validFormat.h = validFormat.g.toString().padStart(2, '0');\n  validFormat.i = dateObject.getUTCMinutes().toString().padStart(2, '0');\n  validFormat.s = dateObject.getUTCSeconds().toString().padStart(2, '0');\n  validFormat.v = dateObject.getMilliseconds().toString().padStart(3, '0');\n\n  validFormat.l = UnitJSClass.__i18n__.days[validFormat.w];\n  validFormat.D = (validFormat.l as string).substring(0, 3);\n  validFormat.F = UnitJSClass.__i18n__.months[dateObject.getUTCMonth()];\n  validFormat.M = (validFormat.F as string).substring(0, 3);\n\n  const fixedFormat = [...format].reduce((acc, sym) => {\n    acc += Object.hasOwn(validFormat, sym) ? validFormat[sym] : sym;\n\n    return acc;\n  }, '');\n\n  return fixedFormat;\n}\n\nexport default date;\n","import { allOf } from '../../utils/fns';\n\n/**\n * Navigates to the specified URL.\n *\n * @param {string} url - The URL to navigate to.\n */\nfunction navigate(url: string) {\n  allOf({ values: [url], typeOf: ['string'] });\n\n  window.location = url as string & Location;\n  return window.location;\n}\n\nexport default navigate;\n","import { UnitJSClass } from '../../../unit.class';\nimport { allOf } from '../../../utils/fns';\n\n/**\n * Sets the localized day names.\n *\n * @param {string[]} days - Array of 7 day names.\n * @returns {void}\n * @throws {RequiredType} If input is not an array of strings.\n * @throws {SyntaxError} If input does not have exactly 7 entries.\n */\nfunction days(days: string[]) {\n  allOf({ values: days, typeOf: ['string'] });\n\n  if (days.length !== 7) {\n    throw new SyntaxError(\n      `Expected the days array to have exactly 7 entries, but got ${days.length}`\n    );\n  }\n\n  UnitJSClass.__i18n__.days = days;\n}\n\nexport default days;\n","import { UnitJSClass } from '../../../unit.class';\nimport { allOf } from '../../../utils/fns';\n\n/**\n * Sets the localized month names.\n *\n * @param {string[]} months - Array of 12 month names.\n * @returns {void}\n * @throws {RequiredType} If input is not an array of strings.\n * @throws {SyntaxError} If input is not an array of 12 entries.\n */\nfunction months(months: string[]) {\n  allOf({ values: months, typeOf: ['string'] });\n\n  if (months.length !== 12) {\n    throw new SyntaxError(\n      `Expected the months array to have exactly 12 entries, but got ${months.length}`\n    );\n  }\n\n  UnitJSClass.__i18n__.months = months;\n}\n\nexport default months;\n","import { UnitJSClass } from '../../../unit.class';\n\n/**\n * Exposes the i18n configuration object.\n *\n * @returns {{ months: string[], days: string[] }}\n */\nfunction get() {\n  return UnitJSClass.__i18n__;\n}\n\nexport default get;\n","import days from './days';\nimport months from './months';\nimport get from './get';\n\nexport default {\n  days,\n  months,\n  get,\n};\n"],"mappings":"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","names":["value","value","value","value","html","append","text","value","days","months"]}