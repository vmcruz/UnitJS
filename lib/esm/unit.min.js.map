{"version":3,"sources":["../../src/methods/public/index.ts","../../src/utils/RequiredType.error.ts","../../src/utils/fns.ts","../../src/methods/public/addClass.ts","../../src/methods/public/append.ts","../../src/methods/public/attr.ts","../../src/constants/index.ts","../../src/methods/public/css.ts","../../src/methods/public/data.ts","../../src/methods/public/each.ts","../../src/methods/public/first.ts","../../src/methods/public/firstChild.ts","../../src/methods/public/hasClass.ts","../../src/methods/public/html.ts","../../src/methods/public/on.ts","../../src/methods/public/parent.ts","../../src/methods/public/prepend.ts","../../src/methods/public/ready.ts","../../src/methods/public/remove.ts","../../src/methods/public/removeClass.ts","../../src/methods/public/text.ts","../../src/methods/public/toggleClass.ts","../../src/methods/public/value.ts","../../src/methods/public/get.ts","../../src/methods/static/index.ts","../../src/methods/static/create.ts","../../src/unit.class.ts","../../src/methods/static/date.ts","../../src/methods/static/navigate.ts","../../src/methods/static/i18n/days.ts","../../src/methods/static/i18n/months.ts","../../src/methods/static/i18n/get.ts","../../src/methods/static/i18n/index.ts","../../src/unit.ts"],"sourcesContent":["import addClass from './addClass';\nimport append from './append';\nimport attr from './attr';\nimport css from './css';\nimport data from './data';\nimport each from './each';\nimport first from './first';\nimport firstChild from './firstChild';\nimport hasClass from './hasClass';\nimport html from './html';\nimport on from './on';\nimport parent from './parent';\nimport prepend from './prepend';\nimport ready from './ready';\nimport remove from './remove';\nimport removeClass from './removeClass';\nimport text from './text';\nimport toggleClass from './toggleClass';\nimport value from './value';\nimport get from './get';\n\nexport {\n  addClass,\n  append,\n  attr,\n  css,\n  data,\n  each,\n  first,\n  firstChild,\n  hasClass,\n  html,\n  on,\n  parent,\n  prepend,\n  ready,\n  remove,\n  removeClass,\n  text,\n  toggleClass,\n  value,\n  get,\n};\n","class RequiredType extends Error {\n  constructor(message: string, ...params: any[]) {\n    super(...params);\n\n    this.name = 'RequiredType';\n    this.message = message;\n  }\n}\n\nexport default RequiredType;\n","import { type PrimitiveType } from '../types';\nimport RequiredType from './RequiredType.error';\n\n/**\n * Validates whether the value is null or undefined\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\ntype AllOfArguments = {\n  values: any[];\n  typeOf?: PrimitiveType[];\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  instanceOf?: Function[];\n  allowEmptyString?: boolean;\n};\n\n/**\n * Validates that all values in the array conform to at least one of the specified primitive types\n * or are instances of one of the specified constructor functions.\n */\nexport function allOf({\n  values,\n  typeOf = [],\n  instanceOf = [],\n  allowEmptyString = false,\n}: AllOfArguments) {\n  const instancesNames = instanceOf.map((instance) => instance.name);\n  const expectedData = [...typeOf, ...instancesNames];\n\n  if (isNullOrUndefined(values) || !Array.isArray(values)) {\n    throw new RequiredType(\n      `Expected all values to be [ ${expectedData.join(', ')} ] type, but got [ ${typeof values} ]`\n    );\n  }\n\n  let currentType: PrimitiveType = 'undefined';\n\n  const notConforms = values.some((value) => {\n    if (\n      typeof value === 'string' &&\n      value === '' &&\n      allowEmptyString === false\n    ) {\n      return true;\n    }\n\n    currentType = typeof value;\n\n    const isSupportedType = typeOf.includes(currentType);\n    const isSupportedInstance = instanceOf.some(\n      (instance) => value instanceof instance\n    );\n\n    return !isSupportedType && !isSupportedInstance;\n  });\n\n  if (notConforms) {\n    throw new RequiredType(\n      `Expected all values to be [ ${expectedData.join(', ')} ] type, but got [ ${currentType} ]`\n    );\n  }\n\n  return true;\n}\n\n/**\n * Returns the camel case representation of a kebab cased string\n */\nexport function camelFromKebab(kebab: string) {\n  const [lower, ...rest] = kebab.split('-');\n  const pascalRest = rest.map(\n    (word) => `${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`\n  );\n\n  return `${lower.toLowerCase()}${pascalRest.join('')}`;\n}\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Adds one or more CSS classes to each node.\n *\n * @this {UnitJSClass}\n * @param {...string} classNames - One or more class names to add.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any className is not a string.\n */\nfunction addClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    node.classList.add(...classNames);\n  });\n\n  return this;\n}\n\nexport default addClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Appends a DOM element or a text node (from string) to each node.\n *\n * @param {string | Element} element - A string to create a text node, or a DOM node to append.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If the input is neither a string nor a Node.\n */\nfunction append(this: UnitJSClass, element: string | Element) {\n  allOf({\n    values: [element],\n    typeOf: ['string'],\n    instanceOf: [Element],\n    allowEmptyString: true,\n  });\n\n  const htmlElement =\n    typeof element === 'string' ? document.createTextNode(element) : element;\n\n  this.__nodes__.forEach((node) => {\n    node.appendChild(htmlElement);\n  });\n\n  return this;\n}\n\nexport default append;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the value of a specified attribute on DOM nodes in the current context.\n *\n * @param {string} attribute - The name of the attribute to get or set.\n * @param {string} [value] - The value to assign. If omitted, the current value is returned.\n * @returns {string|this} Returns the attribute value, or the current instance for chaining.\n * @throws {RequiredType} If `attribute` is not a string or `value` (when provided) is not a string.\n */\nfunction attr(this: UnitJSClass, attribute: string, value?: string) {\n  allOf({ values: [attribute], typeOf: ['string'] });\n\n  if (isNullOrUndefined(value)) {\n    if (this.__nodes__[0].hasAttribute(attribute)) {\n      return this.__nodes__[0].getAttribute(attribute);\n    }\n\n    return null;\n  }\n\n  this.__nodes__.forEach((node) => {\n    node.setAttribute(attribute, value);\n  });\n\n  return this;\n}\n\nexport default attr;\n","export const CSS_VALUE_REGEX =\n  /(?<value>.+?)(?:\\s+!(?<important>important))?\\s*$/i;\n\nexport const MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const DAYS = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n\nexport const SHORTCUT_EVENTS = [\n  // Mouse\n  'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'mouseover',\n  'mouseout',\n  'auxclick',\n  'contextmenu',\n  'wheel',\n\n  // Pointer (covers mouse, touch, pen)\n  'pointerdown',\n  'pointerup',\n  'pointermove',\n  'pointerenter',\n  'pointerleave',\n  'pointercancel',\n\n  // Keyboard\n  'keydown',\n  'keyup',\n  'keypress',\n\n  // Touch\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n\n  // Drag & Drop\n  'drag',\n  'dragstart',\n  'dragend',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'drop',\n\n  // Scroll & focus\n  'scroll',\n  'focus',\n  'blur',\n\n  // Form\n  'input',\n  'change',\n  'submit',\n];\n","import { CSS_VALUE_REGEX } from '../../constants';\nimport { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets a CSS property on all nodes in the current context.\n *\n * @param {string} property - The CSS property name (in camelCase or kebab-case).\n * @param {string} [value] - The value to set for the CSS property. If omitted, acts as a getter.\n * @returns {string|this} The computed style value, or the current instance for chaining.\n * @throws {RequiredType} If `property` is not a string or `value` (when provided) is not a string.\n */\nfunction css(this: UnitJSClass, property: string, value?: string) {\n  allOf({ values: [property], typeOf: ['string'] });\n\n  if (isNullOrUndefined(value)) {\n    const computedStyles = window.getComputedStyle(this.__nodes__[0]);\n\n    return computedStyles.getPropertyValue(property);\n  }\n\n  allOf({ values: [value], typeOf: ['string'] });\n\n  const matches = value?.match(CSS_VALUE_REGEX);\n\n  if (matches) {\n    this.__nodes__.forEach((node) => {\n      node.style.setProperty(\n        property,\n        matches.groups?.value,\n        matches.groups?.important\n      );\n    });\n\n    return this;\n  }\n\n  throw new TypeError('Unkown CSSStyleValue');\n}\n\nexport default css;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, camelFromKebab, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets a data attribute (from `dataset`) on all nodes in the current context.\n *\n * @param {string} property - The camelCase name of the data attribute (without 'data-' prefix).\n * @param {string} [value] - The value to set for the data attribute. If omitted, acts as a getter.\n * @returns {string|this} The data attribute value, or the current instance for chaining.\n * @throws {RequiredType} If `property` is not a string or `value` (when provided) is not a string.\n */\nfunction data(this: UnitJSClass, property: string, value?: string) {\n  allOf({ values: [property], typeOf: ['string'] });\n\n  const camelProperty = camelFromKebab(property);\n\n  if (isNullOrUndefined(value)) {\n    return this.__nodes__[0].dataset[camelProperty];\n  }\n\n  allOf({ values: [value], typeOf: ['string'], allowEmptyString: true });\n\n  this.__nodes__.forEach((node) => {\n    node.dataset[camelProperty] = value;\n  });\n\n  return this;\n}\n\nexport default data;\n","import { FunctionSignature } from '../../types';\nimport { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Executes one or more callback functions on each node.\n *\n * @param {...Function} fns - One or more functions to execute on each node. Each function\n *   should accept `(node, index, nodesArray)` as arguments.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any argument is not a function.\n */\nfunction each(this: UnitJSClass, ...fns: FunctionSignature[]) {\n  allOf({ values: fns, typeOf: ['function'] });\n\n  this.__nodes__.forEach((node, index, nodeArray) => {\n    fns.forEach((fn) => fn(node, index, nodeArray));\n  });\n\n  return this;\n}\n\nexport default each;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the first node in the collection.\n *\n * @returns {any|null} The first node, or `null` if empty.\n */\nfunction first(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0];\n}\n\nexport default first;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the first child node of the first element.\n *\n * @returns {Node|null} The first child node, or `null` if none.\n */\nfunction firstChild(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0].firstChild;\n}\n\nexport default firstChild;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Checks if nodes have the specified class.\n *\n * @param {string} className - The class name to check.\n * @param {boolean} [strict=true] - If `true`, all nodes must have the class; otherwise, some.\n * @returns {boolean} Whether the nodes meet the class condition.\n * @throws {RequiredType} If `className` is not a string.\n */\nfunction hasClass(this: UnitJSClass, className: string, strict = true) {\n  allOf({ values: [className], typeOf: ['string'] });\n\n  const method = strict ? 'every' : 'some';\n\n  return this.__nodes__[method]((node) => node.classList.contains(className));\n}\n\nexport default hasClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the HTML content of nodes.\n *\n * @param {string|HTMLElement} [html] - HTML string or element to set or append.\n * @param {boolean} [append=false] - If `true`, appends instead of replacing.\n * @returns {string|this} HTML string if getting, or the current instance for chaining if setting.\n * @throws {RequiredType} If `html` is provided and is not a string or HTMLElement.\n */\nfunction html(this: UnitJSClass, html?: string | HTMLElement, append = false) {\n  if (isNullOrUndefined(html)) {\n    return this.__nodes__[0].innerHTML;\n  }\n\n  const strHtml = html instanceof HTMLElement ? html.innerHTML : html;\n\n  allOf({\n    values: [strHtml],\n    typeOf: ['string'],\n    instanceOf: [HTMLElement],\n    allowEmptyString: true,\n  });\n\n  this.__nodes__.forEach((node) => {\n    if (append) {\n      node.innerHTML += strHtml;\n    } else {\n      node.innerHTML = strHtml;\n    }\n  });\n\n  return this;\n}\n\nexport default html;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Attaches one or more event listeners to all nodes.\n *\n * @param {string} event - The event type to listen for.\n * @param {...Function} fns - One or more handler functions.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `event` is not a string or any handler is not a function.\n */\nfunction on(\n  this: UnitJSClass,\n  event: keyof HTMLElementEventMap,\n  ...fns: ((ev: Event) => void)[]\n) {\n  allOf({ values: [event], typeOf: ['string'] });\n  allOf({ values: fns, typeOf: ['function'] });\n\n  this.__nodes__.forEach((node) => {\n    fns.forEach((fn) => node.addEventListener(event, fn, false));\n  });\n\n  return this;\n}\n\nexport default on;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the parent node of the first element.\n *\n * @returns {HTMLElement|null} The parent node, or `null` if empty.\n */\nfunction parent(this: UnitJSClass) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[0].parentNode;\n}\n\nexport default parent;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Prepends a DOM element or a text node (from string) to each node.\n *\n * @param {string | HTMLElement} element - A string to create a text node, or a DOM node to prepend.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If the input is neither a string nor a Node.\n */\nfunction prepend(this: UnitJSClass, element: string | HTMLElement) {\n  allOf({\n    values: [element],\n    typeOf: ['string'],\n    instanceOf: [HTMLElement],\n    allowEmptyString: true,\n  });\n\n  const htmlElement =\n    typeof element === 'string' ? document.createTextNode(element) : element;\n\n  this.__nodes__.forEach((node) => {\n    node.insertBefore(htmlElement, node.firstChild);\n  });\n\n  return this;\n}\n\nexport default prepend;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Adds a 'load' event listener to each node.\n * Useful for elements like images, iframes, and window.\n *\n * @param {Function} fn - The handler for the 'load' event.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `fn` is not a function.\n */\nfunction ready(this: UnitJSClass, fn: (ev: Event) => void) {\n  allOf({ values: [fn], typeOf: ['function'] });\n\n  this.__nodes__.forEach((node) => {\n    if (node instanceof Window || node.nodeType === 1) {\n      node.addEventListener('load', fn, false);\n    } else {\n      node.addEventListener('DOMContentLoaded', fn, false);\n    }\n  });\n  return this;\n}\n\nexport default ready;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Removes a specified child element from each node.\n *\n * @param {Element} element - The child element to remove.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If `element` is not an Element.\n */\nfunction remove(this: UnitJSClass, element: Element) {\n  allOf({ values: [element], instanceOf: [Element] });\n\n  this.__nodes__.forEach((node) => {\n    try {\n      node.removeChild(element);\n    } catch {\n      throw new SyntaxError(`${element} is not a child of this node`);\n    }\n  });\n\n  return this;\n}\n\nexport default remove;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Removes one or more classes from all nodes.\n *\n * @param {...string} classNames - One or more class names to remove.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any class name is not a string.\n */\nfunction removeClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    node.classList.remove(...classNames);\n  });\n\n  return this;\n}\n\nexport default removeClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf, isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the text content of nodes.\n *\n * @param {string} [text] - The text to set.\n * @returns {string|this} The text content, or the current instance for chaining if setting.\n * @throws {RequiredType} If `text` is provided and is not a string.\n */\nfunction text(this: UnitJSClass, text?: string) {\n  if (isNullOrUndefined(text)) {\n    return this.__nodes__[0].textContent;\n  }\n\n  allOf({ values: [text], typeOf: ['string'], allowEmptyString: true });\n\n  this.__nodes__.forEach((node) => {\n    node.textContent = text;\n  });\n\n  return this;\n}\n\nexport default text;\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Toggles one or more classes on all nodes.\n *\n * @param {...string} classNames - Classes to toggle.\n * @returns {this} The current instance for chaining.\n * @throws {RequiredType} If any class name is not a string.\n */\nfunction toggleClass(this: UnitJSClass, ...classNames: string[]) {\n  allOf({ values: classNames, typeOf: ['string'] });\n\n  this.__nodes__.forEach((node) => {\n    classNames.forEach((className) => node.classList.toggle(className));\n  });\n\n  return this;\n}\n\nexport default toggleClass;\n","import { UnitJSClass } from '../../unit.class';\nimport { isNullOrUndefined } from '../../utils/fns';\n\n/**\n * Gets or sets the `value` property of nodes.\n *\n * @param {any} [value] - The value to set.\n * @returns {string|this} The value if getting, or the current instance for chaining if setting.\n */\nfunction value(this: UnitJSClass, value?: any) {\n  if (isNullOrUndefined(value)) {\n    return (this.__nodes__[0] as HTMLInputElement).value;\n  }\n\n  this.__nodes__.forEach((node) => {\n    (node as HTMLInputElement).value = value;\n  });\n\n  return this;\n}\n\nexport default value;\n","import { UnitJSClass } from '../../unit.class';\n\n/**\n * Returns the nth node in the collection.\n *\n * @returns {any|null} The nth node, or `null` if empty.\n */\nfunction get(this: UnitJSClass, index: number) {\n  if (!this.__nodes__.length) {\n    return null;\n  }\n\n  return this.__nodes__[index];\n}\n\nexport default get;\n","import create from './create';\nimport date from './date';\nimport navigate from './navigate';\nimport i18n from './i18n';\n\nexport { create, date, navigate, i18n };\n","import { allOf } from '../../utils/fns';\n\n/**\n * Creates a new DOM element by tag name.\n *\n * @param {string} element - The tag name of the element to create.\n * @returns {HTMLElement} The created element.\n * @throws {RequiredType} If `element` is not a string.\n */\nfunction create(element: string) {\n  allOf({ values: [element], typeOf: ['string'] });\n\n  return document.createElement(element);\n}\n\nexport default create;\n","import { DAYS, MONTHS, SHORTCUT_EVENTS } from './constants';\nimport { publicMethods } from './methods';\n\nexport class UnitJSClass {\n  __nodes__: any[] = [];\n  [k: string]: any;\n\n  static __i18n__ = {\n    months: MONTHS,\n    days: DAYS,\n  };\n\n  constructor(...selectors: any[]) {\n    selectors.forEach((selector) => {\n      if (typeof selector === 'string') {\n        try {\n          const selectedNodes = Array.from(document.querySelectorAll(selector));\n          this.__nodes__.push(...selectedNodes);\n        } catch {\n          throw new SyntaxError(`${selector} is not a valid DOM selector`);\n        }\n      } else {\n        this.__nodes__.push(selector);\n      }\n    });\n\n    // Inject dom events\n    SHORTCUT_EVENTS.forEach((e) => {\n      UnitJSClass.prototype[e] = function (fn?: (ev: Event) => void) {\n        if (fn && typeof fn === 'function') {\n          this.on(e as keyof ElementEventMap, fn);\n        } else {\n          this.each((node) => {\n            const method = node[e as keyof HTMLElement];\n\n            if (typeof method === 'function') {\n              (method as () => void).call(node);\n            }\n          });\n        }\n        return this;\n      };\n    });\n  }\n\n  get length() {\n    return this.__nodes__.length;\n  }\n\n  get nodes() {\n    return this.__nodes__;\n  }\n\n  addClass = publicMethods.addClass;\n  append = publicMethods.append;\n  attr = publicMethods.attr;\n  css = publicMethods.css;\n  data = publicMethods.data;\n  each = publicMethods.each;\n  first = publicMethods.first;\n  firstChild = publicMethods.firstChild;\n  hasClass = publicMethods.hasClass;\n  html = publicMethods.html;\n  on = publicMethods.on;\n  parent = publicMethods.parent;\n  prepend = publicMethods.prepend;\n  ready = publicMethods.ready;\n  remove = publicMethods.remove;\n  removeClass = publicMethods.removeClass;\n  text = publicMethods.text;\n  toggleClass = publicMethods.toggleClass;\n  value = publicMethods.value;\n  get = publicMethods.get;\n}\n","import { UnitJSClass } from '../../unit.class';\nimport { allOf } from '../../utils/fns';\n\n/**\n * Formats a UTC timestamp into a custom string using PHP-style date format symbols.\n *\n * Inspired by PHP's `date()` function, this method formats a date based on a given format string,\n * a UNIX timestamp (in milliseconds), and an optional UTC offset (in hours). It supports\n * localization via `this.days` and `this.months` static methods.\n *\n * Supported format characters:\n * - `d` – Day of the month, 2 digits (e.g. \"01\" to \"31\")\n * - `j` – Day of the month without leading zeros (1 to 31)\n * - `w` – Day of the week (0 = Sunday to 6 = Saturday)\n * - `N` – ISO-8601 weekday number (1 = Monday to 7 = Sunday)\n * - `l` – Full name of the day (from `this.__i18n__.days`)\n * - `D` – Short name of the day (first 3 letters of `l`)\n * - `m` – Month number with leading zeros (01 to 12)\n * - `n` – Month number without leading zeros (1 to 12)\n * - `F` – Full month name (from `this.__i18n__.months`)\n * - `M` – Short month name (first 3 letters of `F`)\n * - `Y` – Full 4-digit year (e.g. \"2025\")\n * - `y` – Last two digits of the year (e.g. \"25\")\n * - `G` – 24-hour format without leading zeros (0 to 23)\n * - `H` – 24-hour format with leading zeros (00 to 23)\n * - `g` – 12-hour format without leading zeros (1 to 12)\n * - `h` – 12-hour format with leading zeros (01 to 12)\n * - `a` – Lowercase am/pm\n * - `A` – Uppercase AM/PM\n * - `i` – Minutes with leading zeros (00 to 59)\n * - `s` – Seconds with leading zeros (00 to 59)\n * - `v` – Milliseconds with leading zeros (000 to 999)\n *\n * Any character not recognized as a formatting symbol will be passed through literally.\n *\n * @param {string} format - The PHP-style format string to use.\n * @param {number} [timestamp=Date.now()] - The timestamp to format (in milliseconds).\n * @param {number} [offset=0] - UTC offset in hours (e.g. `-5` for GMT-5).\n * @throws {TypeError} If `this.__i18n__.months` is not a valid array of 12 items\n * or `this.__i18n__.days` of 7.\n * @throws {RequiredType} If invalid argument types are passed to the function.\n * @returns {string} The formatted date string.\n */\nfunction date(format: string, timestamp = Date.now(), offset = 0) {\n  allOf({ values: [format], typeOf: ['string'] });\n  allOf({ values: [offset, timestamp], typeOf: ['number'] });\n\n  if (!format) {\n    throw new TypeError('Empty string is not a valid string format');\n  }\n\n  const validFormat: { [key: string]: string | number } = {};\n  const timestampOffsetMs = offset * 60 * 60 * 1000;\n  const dateObject = new Date(timestamp + timestampOffsetMs);\n\n  validFormat.d = dateObject.getUTCDate().toString().padStart(2, '0');\n  validFormat.j = dateObject.getUTCDate();\n  validFormat.w = dateObject.getUTCDay();\n  validFormat.N = validFormat.w === 0 ? 7 : validFormat.w;\n  validFormat.m = (dateObject.getUTCMonth() + 1).toString().padStart(2, '0');\n  validFormat.n = dateObject.getUTCMonth() + 1;\n  validFormat.Y = dateObject.getUTCFullYear();\n  validFormat.y = validFormat.Y.toString().slice(-2);\n\n  validFormat.a = 'am';\n  validFormat.A = 'AM';\n  validFormat.G = dateObject.getUTCHours();\n  validFormat.H = validFormat.G.toString().padStart(2, '0');\n  validFormat.g = validFormat.G === 0 ? 12 : validFormat.G;\n\n  if (validFormat.G > 12) {\n    validFormat.a = 'pm';\n    validFormat.A = 'PM';\n    validFormat.g = validFormat.G - 12;\n  }\n\n  validFormat.h = validFormat.g.toString().padStart(2, '0');\n  validFormat.i = dateObject.getUTCMinutes().toString().padStart(2, '0');\n  validFormat.s = dateObject.getUTCSeconds().toString().padStart(2, '0');\n  validFormat.v = dateObject.getMilliseconds().toString().padStart(3, '0');\n\n  validFormat.l = UnitJSClass.__i18n__.days[validFormat.w];\n  validFormat.D = (validFormat.l as string).substring(0, 3);\n  validFormat.F = UnitJSClass.__i18n__.months[dateObject.getUTCMonth()];\n  validFormat.M = (validFormat.F as string).substring(0, 3);\n\n  const fixedFormat = [...format].reduce((acc, sym) => {\n    acc += Object.hasOwn(validFormat, sym) ? validFormat[sym] : sym;\n\n    return acc;\n  }, '');\n\n  return fixedFormat;\n}\n\nexport default date;\n","import { allOf } from '../../utils/fns';\n\n/**\n * Navigates to the specified URL.\n *\n * @param {string} url - The URL to navigate to.\n */\nfunction navigate(url: string) {\n  allOf({ values: [url], typeOf: ['string'] });\n\n  window.location = url as string & Location;\n  return window.location;\n}\n\nexport default navigate;\n","import { UnitJSClass } from '../../../unit.class';\nimport { allOf } from '../../../utils/fns';\n\n/**\n * Sets the localized day names.\n *\n * @param {string[]} days - Array of 7 day names.\n * @returns {void}\n * @throws {RequiredType} If input is not an array of strings.\n * @throws {SyntaxError} If input does not have exactly 7 entries.\n */\nfunction days(days: string[]) {\n  allOf({ values: days, typeOf: ['string'] });\n\n  if (days.length !== 7) {\n    throw new SyntaxError(\n      `Expected the days array to have exactly 7 entries, but got ${days.length}`\n    );\n  }\n\n  UnitJSClass.__i18n__.days = days;\n}\n\nexport default days;\n","import { UnitJSClass } from '../../../unit.class';\nimport { allOf } from '../../../utils/fns';\n\n/**\n * Sets the localized month names.\n *\n * @param {string[]} months - Array of 12 month names.\n * @returns {void}\n * @throws {RequiredType} If input is not an array of strings.\n * @throws {SyntaxError} If input is not an array of 12 entries.\n */\nfunction months(months: string[]) {\n  allOf({ values: months, typeOf: ['string'] });\n\n  if (months.length !== 12) {\n    throw new SyntaxError(\n      `Expected the months array to have exactly 12 entries, but got ${months.length}`\n    );\n  }\n\n  UnitJSClass.__i18n__.months = months;\n}\n\nexport default months;\n","import { UnitJSClass } from '../../../unit.class';\n\n/**\n * Exposes the i18n configuration object.\n *\n * @returns {{ months: string[], days: string[] }}\n */\nfunction get() {\n  return UnitJSClass.__i18n__;\n}\n\nexport default get;\n","import days from './days';\nimport months from './months';\nimport get from './get';\n\nexport default {\n  days,\n  months,\n  get,\n};\n","import { staticMethods } from './methods';\nimport { UnitJSClass } from './unit.class';\n\nconst UnitJS = (...selectors: any[]) => new UnitJSClass(...selectors);\n\nUnitJS.create = staticMethods.create;\nUnitJS.date = staticMethods.date;\nUnitJS.navigate = staticMethods.navigate;\nUnitJS.i18n = staticMethods.i18n;\n\nexport { UnitJS };\n"],"mappings":"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","names":["public_exports","__export","addClass_default","append_default","attr_default","css_default","data_default","each_default","first_default","firstChild_default","get_default","hasClass_default","html_default","on_default","parent_default","prepend_default","ready_default","remove_default","removeClass_default","text_default","toggleClass_default","value_default","RequiredType","message","params","RequiredType_error_default","isNullOrUndefined","value","allOf","values","typeOf","instanceOf","allowEmptyString","instancesNames","instance","expectedData","RequiredType_error_default","currentType","isSupportedType","isSupportedInstance","camelFromKebab","kebab","lower","rest","pascalRest","word","addClass","classNames","allOf","node","addClass_default","append","element","allOf","htmlElement","node","append_default","attr","attribute","value","allOf","isNullOrUndefined","node","attr_default","CSS_VALUE_REGEX","MONTHS","DAYS","SHORTCUT_EVENTS","css","property","value","allOf","isNullOrUndefined","matches","CSS_VALUE_REGEX","node","css_default","data","property","value","allOf","camelProperty","camelFromKebab","isNullOrUndefined","node","data_default","each","fns","allOf","node","index","nodeArray","fn","each_default","first","first_default","firstChild","firstChild_default","hasClass","className","strict","allOf","method","node","hasClass_default","html","append","isNullOrUndefined","strHtml","allOf","node","html_default","on","event","fns","allOf","node","fn","on_default","parent","parent_default","prepend","element","allOf","htmlElement","node","prepend_default","ready","fn","allOf","node","ready_default","remove","element","allOf","node","remove_default","removeClass","classNames","allOf","node","removeClass_default","text","isNullOrUndefined","allOf","node","text_default","toggleClass","classNames","allOf","node","className","toggleClass_default","value","isNullOrUndefined","node","value_default","get","index","get_default","static_exports","__export","create_default","date_default","i18n_default","navigate_default","create","element","allOf","create_default","UnitJSClass","_UnitJSClass","MONTHS","DAYS","selectors","selector","selectedNodes","SHORTCUT_EVENTS","e","fn","node","method","public_exports","date","format","timestamp","offset","allOf","validFormat","timestampOffsetMs","dateObject","UnitJSClass","acc","sym","date_default","navigate","url","allOf","navigate_default","days","allOf","UnitJSClass","days_default","months","allOf","UnitJSClass","months_default","get","UnitJSClass","get_default","i18n_default","days_default","months_default","get_default","UnitJS","selectors","UnitJSClass","static_exports"]}